generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Tweet {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tweetId     String   @unique
  text        String
  createdAt   String
  username    String
  cashtags    Json   @db.Json
  qualityScore Float?
  type        String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  tweetDate   TweetDate @relation(fields: [tweetDateId], references: [id])
  tweetDateId String
}

model TweetDate {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  date        String   @unique
  tweets      Tweet[]
  reports     Report[] // Updated to support multiple reports
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username    String   @unique
  tweets      Tweet[]
}

model Report {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  cashtag    String   // Cashtag of the report
  content     Json     @db.Json // Change from String to Json
  createdAt   DateTime @default(now()) // Timestamp for the report creation
  tweetDate   TweetDate @relation(fields: [tweetDateId], references: [id])
  tweetDateId String   // Foreign key referencing TweetDate
}

model CashtagCount {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  cashtag     String   @unique
  count       Int
  date        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@unique([cashtag, date])
}
